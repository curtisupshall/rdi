from bio import *
import sys
from python import os, argparse, random
from index import build_index, write_dictionary
from query import load_index

def main():
    system_args = sys.argv[1:]

    parser = argparse.ArgumentParser(
        prog='rdi',
        description='Repeat Detection Index',
        )
    
    parser.add_argument('mode', choices=['index', 'query'], help='Operation mode; index, or query')
    parser.add_argument('file_path', help='Path to your FASTA file')

    mode = parser.parse_known_args(system_args)[0].mode
    try:
        if mode == 'query':
            parser.add_argument('-l', '--length', required=True, help='The length of kmers to query')
            parser.add_argument('-r', '--repeats', required=True, help='The number of repeats to query')
            parser.add_argument('-v', '--verbose', required=False, help='Print statistics')
        elif mode == 'index':
            parser.add_argument('-b', '--benchmark', help='Number of iterations for a benchmark file')

    except:
        return 0

    try:
        args = parser.parse_args(system_args)
    except:
        return 0

    file_path = args.file_path
    mode = args.mode

    # Check if FASTA file actually exists
    if not os.path.exists(file_path):
        print(f'No file was found at {file_path}. Exiting.')
        return 0

    index_path = f'{file_path}.rdi'
    Text = ''

    # Read the FASTA file
    for read in FASTA(file_path, fai=False, validate=False, gzip=False):
        Text = str(read.seq).upper()
        break

    if mode == 'index':
        # Index the FASTA file
        print(f'Writing "{index_path}"... ')
        (index, ls, rs) = build_index(Text)

        if args.benchmark:
            with open(f'{file_path}.rdibench', 'w') as f:
                for _ in range(int(args.benchmark)):
                    l = random.choice(ls)
                    r = random.choice(rs)
                    f.write(f'{l} {r}\n')

        write_dictionary(index, index_path)
        print('\bDone.')

    elif mode == 'query':
        # Check if the index has been build
        if not os.path.exists(index_path):
            print(f'No RDI index was found for {file_path}. You can build an index by running:\n\t./rdi index {file_path}\n')
            return 0

        # Build btree
        Rdi = load_index(index_path)

        # Query the index
        r = int(args.repeats)
        l = int(args.length)
        rs = Rdi.find(l)
        ps = rs.find(r, List[int]([]))

        for p in (ps):
            print(f'{Text[p:p+l]} @{p}')

        # Print query statistics
        print(f'\nFound {len(ps)} kmers of length {l} occurring {r} {"time" if r == 1 else "times"}')
        return 0

main()
